{% raw %}
name: tests

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    services:
      postgres:
        # From:
        # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
{%- endraw %}
          python-version: {{cookiecutter.python_version}}
{% raw %}
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached dependencies
        id: cached-python-dependencies
        uses: actions/cache@v2
        with:
          path: ./env
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev/dev.txt', '**/requirements/base/base.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-python-dependencies.outputs.cache-hit != 'true'
        run: |
          python3 -m venv env
          . env/bin/activate
          make setup
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Run tests
        run: |
          . env/bin/activate
          make run-tests
  {% endraw %}
        env:
          DJANGO_SETTINGS_MODULE: {{cookiecutter.project_app}}.settings.dev
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/postgres
  {% raw %}
      - name: Job Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,ref,message,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
        if: always() # Pick up events even if the job fails or is canceled.
  {% endraw %}